<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by com.googlecode:maven-idea-plugin -->
<project version="4">
  <component name="ArtifactManager">
#foreach($project in $warProjects)
    <artifact type="exploded-war" build-on-make="true" name="$project.artifactId exploded">
      <output-path>$project.build.directory/${project.artifactId}-${project.version}</output-path>
      <root id="root">
        <element id="javaee-facet-resources" facet="$project.artifactId/web/$project.artifactId" />
        <element id="directory" name="WEB-INF">
          <element id="directory" name="classes">
            <element id="module-output" name="$project.artifactId" />
#if(!$assembleModulesIntoJars)
#foreach($artifact in $context.getDependencies($project))
#if($context.isReactorArtifact($artifact))
            <element id="module-output" name="$artifact.artifactId" />
#end
#end
#end
          </element>
          <element id="directory" name="lib">
            <element id="library" level="project" name="VirtualSharedLibrary" />
#foreach($artifact in $context.getDependencies($project))
#if($context.isReactorArtifact($artifact))
#if($assembleModulesIntoJars)
            <element id="archive" name="$context.getReactorArtifactJarName($artifact)">
              <element id="module-output" name="$artifact.artifactId" />
            </element>
#end
#else
#if($context.isWebFriendlyScope($artifact))
            <element id="library" level="project" name="$artifact.id" />
#end
#end
#end
#if($gaeHome)
            <element id="library" level="project" name="AppEngine API" />
            <element id="library" level="project" name="AppEngine ORM" />
#end
          </element>
        </element>
      </root>
    </artifact>
#end
  </component>
  <component name="CodeStyleManager">
    <option name="USE_DEFAULT_CODE_STYLE_SCHEME" value="true" />
    <option name="CODE_STYLE_SCHEME" value="" />
  </component>
  <component name="CompilerConfiguration">
    <option name="DEFAULT_COMPILER" value="compAPI" />
    <resourceExtensions />
    <wildcardResourcePatterns>
      <entry name="$wildcardResourcePatterns" />
    </wildcardResourcePatterns>
  </component>
  <component name="Encoding" useUTFGuessing="true" native2AsciiForPropertiesFiles="true" defaultCharsetForPropertiesFiles="UTF-8" />
#if($mavenPluginExist)
  <component name="InspectionProjectProfileManager">
    <profiles>
      <profile version="1.0" is_locked="false">
        <inspection_tool class="JavaDoc" enabled="true" level="WARNING" enabled_by_default="true">
          <option name="myAdditionalJavadocTags" value="aggregator, execute, goal, phase, requiresDirectInvocation, requiresProject, requiresReports, requiresOnline, parameter, component, required, readonly, threadSafe" />
        </inspection_tool>
      </profile>
    </profiles>
    <option name="PROJECT_PROFILE" value="Project Default" />
    <option name="USE_PROJECT_PROFILE" value="true" />
  </component>
#end
#if($issueNavigationExist)
  <component name="IssueNavigationConfiguration">
    <option name="links">
      <list>
        <IssueNavigationLink>
          <option name="issueRegexp" value="$issueRegexp" />
          <option name="linkRegexp" value="$linkRegexp" />
        </IssueNavigationLink>
      </list>
    </option>
  </component>
#end
  <component name="MavenProjectsManager">
    <option name="originalFiles">
      <list>
#foreach($reactorProject in $context.reactorProjects)
        <option value="$reactorProject.file.absolutePath" />
#end
      </list>
    </option>
  </component>
  <component name="ProjectModuleManager">
    <modules>
#foreach($reactorPath in $context.reactorPaths)
      <module filepath="$reactorPath" />
#end
    </modules>
  </component>
  <component name="ProjectRootManager" version="2" languageLevel="$jdkLevel" assert-keyword="true" jdk-15="true" project-jdk-name="$jdkName" project-jdk-type="JavaSDK" />
  <component name="VcsDirectoryMappings">
#foreach($entry in $context.vcsMapping.entrySet())
    <mapping directory="$entry.key" vcs="$entry.value" />
#end
  </component>
  <component name="libraryTable">
    <library name="VirtualSharedLibrary">
      <CLASSES>
#foreach($artifact in $context.commonDependencies)
        <root url="jar://$M/$context.getModuleLibraryJar($artifact)!/" />
#end
      </CLASSES>
      <JAVADOC>
#foreach($artifact in $context.commonDependencies)
        <root url="jar://$M/$context.getModuleLibraryJavadocs($artifact)!/" />
#end
      </JAVADOC>
      <SOURCES>
#foreach($artifact in $context.commonDependencies)
        <root url="jar://$M/$context.getModuleLibrarySources($artifact)!/" />
#end
      </SOURCES>
    </library>
#foreach($artifact in $context.allDependencies)
#if(!$context.isReactorArtifact($artifact))
    <library name="$artifact.id">
      <CLASSES>
        <root url="jar://$M/$context.getModuleLibraryJar($artifact)!/" />
      </CLASSES>
      <JAVADOC>
        <root url="jar://$M/$context.getModuleLibraryJavadocs($artifact)!/" />
      </JAVADOC>
      <SOURCES>
        <root url="jar://$M/$context.getModuleLibrarySources($artifact)!/" />
      </SOURCES>
    </library>
#end
#end
#if($gaeHome)
    <library name="AppEngine API">
      <CLASSES>
#foreach($jar in $context.gaeApiJars)
        <root url="jar://$gaeHome/lib/user/$jar!/" />
#end
      </CLASSES>
      <JAVADOC />
      <SOURCES />
    </library>
    <library name="AppEngine ORM">
      <CLASSES>
#foreach($jar in $context.gaeOrmJars)
        <root url="jar://$gaeHome/lib/user/orm/$jar!/" />
#end
      </CLASSES>
      <JAVADOC />
      <SOURCES>
#foreach($srcLib in $context.gaeSourceLibs)
        <root url="jar://$gaeHome/src/orm/$srcLib" />
#end
      </SOURCES>
      <jarDirectory url="file://$gaeHome/lib/user/orm" recursive="false" />
    </library>
#end
  </component>
</project>
